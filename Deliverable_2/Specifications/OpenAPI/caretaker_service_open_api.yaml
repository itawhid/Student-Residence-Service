openapi: 3.0.0

info:
  title: Caretaker Service
  version: 1.0.0 

servers:
  - url: http://{caretaker-service-base-uri}/api

tags:
  - name: appointments
    description: Methods for appoinment resources

paths:

  /appoinments:
    post:
      tags:
        - appointments
      summary: Adds a new appoinment
      description: Method to add a new appoinment. Users only with Resident role can invoke this method. Move In appoinntment can only be added only after the confirmation of the contract. Move Out appointment can only be added no earlier than three months before the contract's current end date.
      requestBody:
        description: Appointment object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAppointment'
          application/xml:
            schema:
              $ref: '#/components/schemas/NewAppointment'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Appointment'
        400:
          description: Validation failed
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: No appointment found with the specified id
      security:
      - bearerAuth: []

    get:
      tags:
        - appointments
      summary: Retrieves appointments
      description: Method to retrieve multiple appointments. Use allowed query parameters to filter and pagination. Users with Administrator, Caretaker and Resident roles can invoke this method.
      parameters:
        - in: query
          name: date
          description: Date to filter by
          required: false
          schema:
            type: string
        - in: query
          name: pageNum
          description: Page number for the pagination.
          required: false
          schema:
            type: integer
            format: int32
            default: 1 (only if pageSize is present)
        - in: query
          name: pageSize
          description: Page size for the pagination.
          required: false
          schema:
            type: integer
            format: int32
            default: 20 (only if pageNum is present)
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointments'
            application/xml:
              schema:
                $ref: '#/components/schemas/Appointments'
        401:
          $ref: '#/components/responses/UnauthorizedError'
      security:
        - bearerAuth: []
  
  /appointments/{appointment-id}:
    get:
      tags:
        - appointments
      summary: Retrieves an appointment
      description: Method to retrieve a partucular appointment. Users with Administrator, Caretaker and Resident roles can invoke this method.
      parameters:
        - in: path
          name: appointment-id
          description: ID of the appointment to be retreived
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Appointment'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: No appointment found with the specified ID
      security:
        - bearerAuth: []

  /appointments/{appointment-id}/acceptance:
    put:
      tags:
        - appointments
      summary: Confirms an appointment
      description: Method to confirm a partucular appointment. An appointment can only be confirmed no later than two weeks after it's creation. Users only with Resident role can invoke this method.
      parameters:
        - in: path
          name: appointment-id
          description: appointment ID
          required: true
          schema:
            type: string
      responses:
        201:
          description: Successful operation
        400:
          description: Validation failed
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: No contract found with the specified ID
      security:
        - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    NewAppointment:
      type: object
      properties:
        contractId:
          type: string
        contractorsName:
          type: string
        roomNumber:
          type: string
        issue:
          type: string
        priorityLevel:
          type: string
          enum:
            - low
            - normal
            - high
        date:
          type: string
          format: date
        appointmentType:
          type: string
          enum:
            - moveIn
            - moveOut
            - miscellaneous
            
      xml:
        name: NewAppointment

    Appointment:
      type: object
      properties:
        appointmentId:
          type: string
        contractId:
          type: string
        contractorsName:
          type: string
        roomNumber:
          type: string
        issue:
          type: string
        priorityLevel:
          type: string
          enum:
            - low
            - normal
            - high
        date:
          type: string
          format: date
        appointmentType:
          type: string
          enum:
            - moveIn
            - moveOut
            - miscellaneous
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
            
      xml:
        name: Appointment
        
    Appointments:
      type: object
      properties:
        data:
          type: array
          items:
              $ref: '#/components/schemas/Appointment'
        _links:
          type: object
          properties:
            next:
              type: object
              properties:
                href:
                  type: string
            prev:
              type: object
              properties:
                href:
                  type: string
            
      xml:
        name: Appointments

  responses:
    UnauthorizedError:
      description: Missing/invalid access token or role not valid for the operation
